# File: docker/docker-compose.yml

version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: taskverse_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE:-taskverse}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - taskverse_network

  # MongoDB Express (Admin UI)
  mongo-express:
    image: mongo-express:1
    container_name: taskverse_mongo_express
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_ROOT_USER:-root}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_ROOT_PASSWORD:-password}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD:-pass}
    ports:
      - "8081:8081"
    networks:
      - taskverse_network

  # MinIO (S3-compatible object storage)
  minio:
    image: minio/minio:latest
    container_name: taskverse_minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - taskverse_network

  # API Server
  api:
    build:
      context: ../apps/api
      dockerfile: Dockerfile
    container_name: taskverse_api
    restart: unless-stopped
    depends_on:
      - mongodb
      - minio
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://${MONGODB_ROOT_USER:-root}:${MONGODB_ROOT_PASSWORD:-password}@mongodb:27017/${MONGODB_DATABASE:-taskverse}?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-15m}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:5173}
      S3_ENDPOINT: http://minio:9000
      S3_BUCKET: ${S3_BUCKET:-taskverse-files}
      S3_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      S3_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin}
      S3_REGION: ${S3_REGION:-us-east-1}
    ports:
      - "3001:3001"
    volumes:
      - ../apps/api/src:/app/src:ro
    networks:
      - taskverse_network

  # Web Frontend (Development)
  web:
    build:
      context: ../apps/web
      dockerfile: Dockerfile
      target: development
    container_name: taskverse_web
    restart: unless-stopped
    depends_on:
      - api
    environment:
      VITE_API_URL: http://localhost:3001/api/v1
      VITE_WS_URL: ws://localhost:3001
    ports:
      - "5173:5173"
    volumes:
      - ../apps/web/src:/app/src:ro
      - ../apps/web/public:/app/public:ro
    networks:
      - taskverse_network

volumes:
  mongodb_data:
  mongodb_config:
  minio_data:

networks:
  taskverse_network:
    driver: bridge